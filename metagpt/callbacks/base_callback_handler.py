"""
This module contains the base class for all callback handlers.
"""

from abc import ABC, abstractmethod
from pydantic import BaseModel, Field


class SenderInfo(BaseModel):
    """
    Contains information about the sender of the message.
    """
    name:str = Field(description="The name of the sender.")
    role:str = Field(description="The role of the sender.")


class BaseCallbackHandler(ABC):
    """
    Base class for all callback handlers.
    """

    @abstractmethod
    def on_new_message(self, sender_info:SenderInfo)->None:
        """
        Called when a new message is received.
        Args:
            sender_info: Sender Info object containing sender info
        """

    @abstractmethod
    def on_new_token_generated(self, token:str)->None:
        """
        Called when a new token is generated.
        Args:
            token: The token generated by the LLM Model
        """

    def on_message_end(self)->None:
        """
        Called when the message ends.
        """
